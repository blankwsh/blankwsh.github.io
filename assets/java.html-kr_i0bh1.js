import{_ as n,o as s,c as a,e as p}from"./app-DHHNIcXM.js";const t={},o=p(`<h1 id="java" tabindex="-1"><a class="header-anchor" href="#java"><span>Java</span></a></h1><h2 id="单选题" tabindex="-1"><a class="header-anchor" href="#单选题"><span>单选题</span></a></h2><p><strong>1-1 在进行类型转换时，为了避免转换异常需要先进行类型的判断，对应的关键字是？</strong></p><p>A、extends  B、implements</p><p>C、instanceof  D、equals</p><p><span class="spoiler" tabindex="-1">答案： C</span></p><hr class="color"><p><strong>1-2 以下程序的输出结果？</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo1</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Animal</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;动物&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Dog</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span><span class="token punctuation">{</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;狗&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>A、动物  B、狗</p><p>C、编译错误  D、null</p><p><span class="spoiler" tabindex="-1">答案： A</span></p><hr class="color"><p><strong>1-3 Java 中所有类的父类是</strong></p><p>A、String  B、Class</p><p>C、Objects  D、Object</p><p><span class="spoiler" tabindex="-1">答案： D</span></p><hr class="color"><p><strong>1-4 编译如下 Java 代码，输出结果是</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">class</span> <span class="token class-name">Base</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Base method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Child</span> <span class="token keyword">extends</span> <span class="token class-name">Base</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Child method&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Demo</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Base</span> base<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Child</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        base<span class="token punctuation">.</span><span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>A、Base method  B、Child method</p><p>C、Base method Child method  D、编译错误</p><p><span class="spoiler" tabindex="-1">答案： B</span></p><hr class="color"><p><strong>1-5 以下关于接口的说法中，正确的是</strong></p><p>A、接口中全部方法都是抽象方法，方法可以是任意访问权限。</p><p>B、接口中属性都是使用 public static final 修饰。</p><p>C、接口可以有构造方法。</p><p>D、接口可以直接创建对象。</p><p><span class="spoiler" tabindex="-1">答案： B</span></p><hr class="color"><p><strong>1-6 下列 Java 代码中，小括号中填入正确代码是</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Person</span> p<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//判断p是否是Student类型</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>_____<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Student</span> s <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Student</span><span class="token punctuation">)</span>p<span class="token punctuation">;</span>
            s<span class="token punctuation">.</span><span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">eat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;吃饭&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">Student</span> <span class="token keyword">extends</span> <span class="token class-name">Person</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">study</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;学习&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>A、p instanceof Person  B、p instanceof Object</p><p>C、p instanceof Student  D、Student instanceof Person</p><p><span class="spoiler" tabindex="-1">答案： C</span></p><hr class="color"><p><strong>1-7 已知 Animal 是父类，Dog 是子类。以下代码，强转格式正确的是</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Animal</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Dog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        ____________________
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>A、Dog dog = a;  B、Dog dog = Dog(a);</p><p>C、Dog dog = (Animal)a;  D、Dog dog = (Dog)a;</p><p><span class="spoiler" tabindex="-1">答案： D</span></p><hr class="color"><p><strong>1-8 关于 Object 类中的 equals 方法，说法正确的是</strong></p><p>A、equals 方法的作用是返回对象的地址值。</p><p>B、equals 方法，默认是比较两个对象的属性值是否一样。</p><p>C、String 类重写了 Object 的 equals 方法，比较两个字符串的内容是否相同。</p><p>D、D、子类一定要重写 equals 方法。</p><p><span class="spoiler" tabindex="-1">答案： C</span></p><hr class="color"><p><strong>1-9 执行以下代码，输出结果分别是</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">3.5</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">3.5</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>A、4.0 3.0  B、3.0 4.0</p><p>C、3.0 3.0  D、4.0 4.0</p><p><span class="spoiler" tabindex="-1">答案： A</span></p><hr class="color"><p><strong>1-10 执行以下代码，输出结果是</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>A、6.0  B、5.0</p><p>C、27.0  D、8.0</p><p><span class="spoiler" tabindex="-1">答案： D</span></p><hr class="color"><p><strong>1-11 已知字符串 String s = &quot;10&quot;，以下选项能将 s 转为 int 类型的是</strong></p><p>A、int a = s;  B、int a = (int)s;</p><p>C、int a = Integer.parseInt(s);  D、int a = s.parseInt();</p><p><span class="spoiler" tabindex="-1">答案： C</span></p><hr class="color"><p><strong>1-12 将日期按照&quot;2020-08-10 14:20:30&quot;这样的格式输出，横线处填入的模板正确的是</strong></p><div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name">SimpleDateFormat</span> sf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">&quot;_________&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Date</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> strDate <span class="token operator">=</span> sf<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>A、yyyy-mm-dd hh:mm:ss  B、YYYY-MM-DD hh:mm:ss</p><p>C、yyyy-MM-dd HH:mm:ss  D、2020-08-10 14:20:30</p><p><span class="spoiler" tabindex="-1">答案： C</span></p><hr class="color"><p><strong>1-13 在正则表达式中，预定义字符&quot;.&quot;表示什么意思？</strong></p><p>A、匹配任意一个字符。  B、匹配一个空格。</p><p>C、匹配任意长度的字符串。  D、匹配一个小数点。</p><p><span class="spoiler" tabindex="-1">答案： A</span></p><hr class="color"><p><strong>1-14 以下哪个是基本类型的包装类</strong></p><p>A、Char  B、Long</p><p>C、Object  D、Int</p><p><span class="spoiler" tabindex="-1">答案： B</span></p><hr class="color"><p><strong>1-15 以下代码，语法不会报错的是</strong></p><p>A、int a = 10; String s = a;  B、Boolean b = &quot;true&quot;;</p><p>C、Integer a = null;  D、int a = null;</p><p><span class="spoiler" tabindex="-1">答案： C</span></p><hr class="color">`,88),c=[o];function e(l,u){return s(),a("div",null,c)}const k=n(t,[["render",e],["__file","java.html.vue"]]),r=JSON.parse('{"path":"/test/java.html","title":"Java","lang":"zh-CN","frontmatter":{},"headers":[{"level":1,"title":"Java","slug":"java","link":"#java","children":[{"level":2,"title":"单选题","slug":"单选题","link":"#单选题","children":[]}]}],"git":{},"filePathRelative":"test/java.md"}');export{k as comp,r as data};
